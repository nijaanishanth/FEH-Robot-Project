#include <FEHLCD.h>
#include <FEHIO.h>
#include <FEHSD.h>
#include <FEHUtility.h>
#include <FEHMotor.h>
#include <iostream>
#include <fstream>
using namespace std;

// Declarations for analog optosensors
AnalogInputPin right_opto(FEHIO::P2_0);
AnalogInputPin middle_opto(FEHIO::P2_1);
AnalogInputPin left_opto(FEHIO::P2_2);
DigitalEncoder right_encoder(FEHIO::P0_0);
DigitalEncoder left_encoder(FEHIO::P0_1);
FEHMotor right_motor(FEHMotor::Motor0,9.0);
FEHMotor left_motor(FEHMotor::Motor1,9.0);

enum LineStates {
    MIDDLE,
    RIGHT,
    LEFT

};


int main() {

    float lowthreshold;
    float highthreshold;
    int state = MIDDLE; // Set the initial state
    while (true) { // I will follow this line forever!
        switch(state) {
        // If I am in the middle of the line...
        case MIDDLE:
        // Set motor powers for driving straight
        right_motor.SetPercent(-25);
        left_motor.SetPercent(25);


        if (right_opto.Value() > 2.0) {

            state = RIGHT; // update a new state

        }
        if (left_opto.Value() > 2.0) {

            state = LEFT; // update a new state

        }

        break;

        // If the right sensor is on the line...

        case RIGHT:

        // Set motor powers for right turn

        right_motor.SetPercent(25);
        left_motor.SetPercent(25);
        if(middle_opto.Value() > 2.0) {

            state = MIDDLE;

        }

        break;

        // If the left sensor is on the line...

        case LEFT:

        right_motor.SetPercent(-25);
        left_motor.SetPercent(-25);
        if(middle_opto.Value() > 2.0) {

            state = MIDDLE;

        }

        break;

    default: // Error. Something is very wrong.

        break;

    }

    // Sleep a bit
    Sleep(50);

    }

}
